# Database connection with the given database name/
spring.datasource.url = jdbc:mysql://localhost:3306/rentacar?useUnicode=yes&characterEncoding=UTF-8&useSSL=true&createDatabaseIfNotExist=true

# Username and password
spring.datasource.username = root
spring.datasource.password = denis00000000

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# Using "create" will delete and recreate the tables every time the project is started
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy = org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Turn off Thymeleaf cache
spring.thymeleaf.cache = false

# Run Spring Boot on a different port
server.port = 8000


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreply.rentauto@gmail.com
spring.mail.password=${password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8


paypal.mode=live
#paypal.client.app = AdeZf-_k1PGta8s2-AMuqy8HiL7cQQhqwGazCSLdmErR8k7h8WpjiBXjst_lmPGxaBwsJ_2r-edsnISa
#paypal.client.secret = EMM5kw1zvr6dxOqo7Yhl_ENEJY2NhKUkKIO5neL10zFFGEaThu5Zm0HlvFIcrwSNL-j4jTqMSha6ydq5
paypal.client.app = AYVezQ0-nfhEajAMPTUyh9x1TMMWLRNYYH8_-zwzxGyHi3584-WuPdFQpJhVoaIZ44Y4KGX6L-2MiyUl
paypal.client.secret = EDCnUu4ht65LY7lpGl52QxjxN1eAePkBgPwYaWMmZODonJwcslOtg3NVb_jF-wOtDUo2domuSjYGXb2_
